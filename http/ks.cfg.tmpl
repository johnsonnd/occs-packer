auth --enableshadow --passalgo=sha512

# Install OS instead of upgrade
install

# Use text mode install
text

reboot
# url --url="mirror.centos.org/centos/7/os/x86_64"
# repo --name "os" --baseurl="http://mirror.centos.org/centos/7/os/x86_64/" --cost=100
# repo --name "updates" --baseurl="http://mirror.centos.org/centos/7/updates/x86_64/" --cost=100
# repo --name "extras" --baseurl="http://mirror.centos.org/centos/7/extras/x86_64/" --cost=100
# Use network installation
url --url http://mirrors.kernel.org/centos/7/os/x86_64/

# Repositories to use
# repo --name centos_base --mirrorlist="http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=os" --cost="125"

# Use Updates to pull in patches for new builds
repo --name centos_updates --mirrorlist="http://mirrorlist.centos.org/?release=7&arch=x86_64&repo=updates" --cost="100"

# Use EPEL to install extra software
repo --name centos_epel --mirrorlist="https://mirrors.fedoraproject.org/mirrorlist?repo=epel-7&arch=x86_64" --cost="200"

# Firewall configuration
firewall --disabled
firstboot --disable
# ignoredisk --only-use=vda
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8
# Network information
# network  --bootproto=dhcp
# network  --hostname=localhost.localdomain
network  --bootproto=dhcp --device=link --ipv6=auto

# Root password
# rootpw --iscrypted thereisnopasswordanditslocked
# rootpw --lock --plaintext "$(openssl rand -base64 32)"
rootpw --plaintext "{{OCCS_PACKER_ROOT_PASSWORD}}"

# System services

# Do not configure the X Window System
skipx

# System timezone
# timezone America/New_York
timezone UTC --isUtc

# ignoredisk --only-use=vda
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr

selinux --enforcing
services --disabled="kdump" --enabled="haveged,network,sshd,rsyslog,chronyd"

# Disk
# bootloader --append="console=tty0" --location=mbr --timeout=1 --boot-drive=vda
bootloader --append="console=tty0" --location=mbr --timeout=1
# Clear the Master Boot Record
zerombr

# Partition clearing information
clearpart --all

# Disk partitioning information
part /boot --asprimary --fstype="xfs" --size=512 --fsoptions="defaults,nodev,nosuid,noexec"
part pv.174 --fstype="lvmpv" --size=21250 --grow
volgroup vg00 --pesize=4096 pv.174
logvol swap        --fstype="swap" --size=256 --name=lv_swap --vgname=vg00
logvol /tmp        --fstype="xfs" --size=1024 --fsoptions="defaults,nodev,nosuid,noexec,noatime,discard" --name=lv_tmp --vgname=vg00
logvol /var        --fstype="xfs" --size=3072 --fsoptions="defaults,nodev,relatime,discard" --name=lv_var --vgname=vg00
logvol /           --fstype="xfs" --size=4096 --fsoptions="defaults,noatime,discard" --name=lv_root --vgname=vg00
logvol /home       --fstype="xfs" --size=1024 --fsoptions="defaults,nodev,nosuid,noexec,noatime,discard" --name=lv_home --vgname=vg00
logvol /var/log    --fstype="xfs" --size=6144 --fsoptions="defaults,nodev,nosuid,noexec,noatime,discard" --name=lv_log --vgname=vg00
logvol /var/log/audit  --fstype="xfs" --size=1024 --fsoptions="defaults,nodev,nosuid,noexec,noatime,discard" --name=lv_audit --vgname=vg00
logvol /usr/nlm        --fstype="xfs" --size=4098 --fsoptions="defaults,nodev,noatime,discard" --name=lv_nlm --vgname=vg00

user --groups=wheel --homedir=/home/ansible --name=ansible --password="4isl.STBSSS" --gecos="Ansible"

%pre --interpreter=/bin/bash --logfile /tmp/ks-pre.log.1
#!/bin/bash -x
%end

%post --erroronfail
# passwd -d root
# passwd -l root

# ----- Enable Ansible to run root commands -----
/bin/cat <<SUDOERS > /etc/sudoers.d/ansible
ansible ALL=(ALL) NOPASSWD:ALL
SUDOERS

yum -y install ansible

mkdir /home/ansible/.ssh
chmod 700 /home/ansible/.ssh
cat > /home/ansible/.ssh/authorized_keys << ANSIBLE_KEY
{{OCCS_ANSIBLE_PUB_KEY}}
ANSIBLE_KEY

# pvgrub support
echo -n "Creating grub.conf for pvgrub"
rootuuid=$( awk '$2=="/" { print $1 };'  /etc/fstab )
mkdir /boot/grub
echo -e 'default=0\ntimeout=0\n\n' > /boot/grub/grub.conf
for kv in $( ls -1v /boot/vmlinuz* |grep -v rescue |sed s/.*vmlinuz-//  ); do
  echo "title CentOS Linux 7 ($kv)" >> /boot/grub/grub.conf
  echo -e "\troot (hd0)" >> /boot/grub/grub.conf
  echo -e "\tkernel /boot/vmlinuz-$kv ro root=$rootuuid console=hvc0 LANG=en_US.UTF-8" >> /boot/grub/grub.conf
  echo -e "\tinitrd /boot/initramfs-$kv.img" >> /boot/grub/grub.conf
  echo
done
ln -sf grub.conf /boot/grub/menu.lst
ln -sf /boot/grub/grub.conf /etc/grub.conf

# setup systemd to boot to the right runlevel
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

yum -C -y remove linux-firmware

# Remove firewalld; it is required to be present for install/image building.
# but we dont ship it in cloud
yum -C -y remove firewalld --setopt="clean_requirements_on_remove=1"
yum -C -y remove avahi\* Network\*
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE="eth0"
BOOTPROTO="dhcp"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
EOF

echo "virtual-guest" > /etc/tuned/active_profile

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF
echo .

systemctl mask tmp.mount

cat <<EOL > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOL

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

yum clean all

# XXX instance type markers - MUST match CentOS Infra expectation
echo 'genclo' > /etc/yum/vars/infra

# chance dhcp client retry/timeouts to resolve #6866
cat  >> /etc/dhcp/dhclient.conf << EOF

timeout 300;
retry 60;
EOF

echo "Fixing SELinux contexts."
touch /var/log/cron
touch /var/log/boot.log
mkdir -p /var/cache/yum
/usr/sbin/fixfiles -R -a restore

# reorder console entries
sed -i 's/console=tty0/console=tty0 console=ttyS0,115200n8/' /boot/grub2/grub.cfg

chown -R ansible.ansible /home/ansible/.ssh
chmod 644 /home/ansible/.ssh/authorized_keys

# Switch Anaconda to the first console
chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1
%end

%packages
@core
chrony
clamav
clamav-scanner
# cloud-init
cloud-utils-growpart
dracut-config-generic
dracut-norescue
epel-release
firewalld
git
grub2
haveged
kernel
libselinux-python
mdadm
nfs-utils
rsync
tar
yum-utils
-NetworkManager
-aic94xx-firmware
-alsa-firmware
-alsa-lib
-alsa-tools-firmware
-biosdevname
-iprutils
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl105-firmware
-iwl135-firmware
-iwl2000-firmware
-iwl2030-firmware
-iwl3160-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6000g2b-firmware
-iwl6050-firmware
-iwl7260-firmware
-libertas-sd8686-firmware
-libertas-sd8787-firmware
-libertas-usb8388-firmware
-plymouth

### Begin DevOps ( sorted by alpha )
# centos-release-scl is installed from CentOS-extras repo
# look in scripts/scripts_devops/base.sh
awscli
vim-common
net-tools
bind-utils
### End DevOps
%end

# %addon org_fedora_oscap
#     content-type = scap-security-guide
#     profile = stig-rhel7-server-upstream
# %end
#
%addon com_redhat_kdump --disable
%end
#
# %anaconda
# pwpolicy root --minlen=6 --minquality=50 --notstrict --nochanges --notempty
# pwpolicy user --minlen=6 --minquality=50 --notstrict --nochanges --notempty
# pwpolicy luks --minlen=6 --minquality=50 --notstrict --nochanges --notempty
# %end
